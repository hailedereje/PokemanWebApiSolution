// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokemanWebApi.Data;

#nullable disable

namespace PokemanWebApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.3.23174.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PokemanWebApi.Model.Catagory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Catagories");
                });

            modelBuilder.Entity("PokemanWebApi.Model.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("PokemanWebApi.Model.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Gym")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("PokemanWebApi.Model.Pokeman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pokemans");
                });

            modelBuilder.Entity("PokemanWebApi.Model.PokemanCatagory", b =>
                {
                    b.Property<int>("PokemanId")
                        .HasColumnType("int");

                    b.Property<int>("CatagoryId")
                        .HasColumnType("int");

                    b.HasKey("PokemanId", "CatagoryId");

                    b.HasIndex("CatagoryId");

                    b.ToTable("PokemanCatagories");
                });

            modelBuilder.Entity("PokemanWebApi.Model.PokemanOwner", b =>
                {
                    b.Property<int>("PokemanId")
                        .HasColumnType("int");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("PokemanId", "OwnerId");

                    b.HasIndex("OwnerId");

                    b.ToTable("PokemanOwners");
                });

            modelBuilder.Entity("PokemanWebApi.Model.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PokemanId")
                        .HasColumnType("int");

                    b.Property<int>("ReviewerId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PokemanId");

                    b.HasIndex("ReviewerId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("PokemanWebApi.Model.Reviewer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reviewers");
                });

            modelBuilder.Entity("PokemanWebApi.Model.Owner", b =>
                {
                    b.HasOne("PokemanWebApi.Model.Country", "Country")
                        .WithMany("Owner")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("PokemanWebApi.Model.PokemanCatagory", b =>
                {
                    b.HasOne("PokemanWebApi.Model.Catagory", "Catagory")
                        .WithMany("PokemanCatagories")
                        .HasForeignKey("CatagoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokemanWebApi.Model.Pokeman", "Pokeman")
                        .WithMany("PokemanCatagories")
                        .HasForeignKey("PokemanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catagory");

                    b.Navigation("Pokeman");
                });

            modelBuilder.Entity("PokemanWebApi.Model.PokemanOwner", b =>
                {
                    b.HasOne("PokemanWebApi.Model.Owner", "Owner")
                        .WithMany("PokemanOwners")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokemanWebApi.Model.Pokeman", "Pokeman")
                        .WithMany("PokemanOwners")
                        .HasForeignKey("PokemanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Pokeman");
                });

            modelBuilder.Entity("PokemanWebApi.Model.Review", b =>
                {
                    b.HasOne("PokemanWebApi.Model.Pokeman", "Pokeman")
                        .WithMany("Reviews")
                        .HasForeignKey("PokemanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokemanWebApi.Model.Reviewer", "Reviewer")
                        .WithMany("Reviews")
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pokeman");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("PokemanWebApi.Model.Catagory", b =>
                {
                    b.Navigation("PokemanCatagories");
                });

            modelBuilder.Entity("PokemanWebApi.Model.Country", b =>
                {
                    b.Navigation("Owner");
                });

            modelBuilder.Entity("PokemanWebApi.Model.Owner", b =>
                {
                    b.Navigation("PokemanOwners");
                });

            modelBuilder.Entity("PokemanWebApi.Model.Pokeman", b =>
                {
                    b.Navigation("PokemanCatagories");

                    b.Navigation("PokemanOwners");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("PokemanWebApi.Model.Reviewer", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
